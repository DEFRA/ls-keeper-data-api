openapi: 3.0.3
info:
  title: Location API 
  description: |-
    This document formalises the Defra Livestock - Location API definitions delivered by the Defra - Keepers Reference Data Services.
    The specification is based on the OpenAPI 3.0 format. 
  termsOfService: http://www.defra.gov.uk/
  contact:
    email: livestock_refdata_serviceowner@defra.gov.uk
  license:
    name: Commercial License
    url: http://www.defra.gov.uk/
  
  version: 0.3.0

  # Change History
  # 0.1.0 - Initial Draft
  # 0.2.0 - Amendments based on the initial peer review.
  # 0.3.0 - Amendments based on review from LI Ltd.
 
externalDocs:
  description: Defra APHA website
  url: http://www.defra.gov.uk/
tags:
  - name: site
  - name: site reference
  - name: location
  - name: housekeeping

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT authorisation token

  schemas:
    HealthMonitorResponse:
      type: object
      properties:
        healthy:
          type: boolean
        dependencies:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              healthy:
                type: boolean
              ping:
                type: number
                minimum: -1
      example:
        healthy: true
        dependencies:
          - name: db
            healthy: true
            ping: 21
          - name: search
            healthy: true
            ping: 26

    Country:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code: 
          type: string
          example: GB-ENG
        name:
          type: string
          readOnly: true
          example: England
        longName:
          type: string
          readOnly: true
          example: England - United Kingdom
        euTradeMemberFlag:
          type: boolean
          example: true
          readOnly: false
        devolvedAuthorityFlag:
          type: boolean
          readOnly: false
          example: false
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the Country record was updated"
      required:
        - code
        - name
        
        
    Species:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code: 
          type: string
          example: BV
        name:
          type: string
          readOnly: true
          example: Bovine (Cattle)
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the Species record was updated"
      required:
        - code
        - name
        
    Marks:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        mark: 
          type: string
          example: 564545
        startDate:
          type: string
          format: date-time
          description: "The date the herd/flock/group mark was assigned."                                                          
        endDate:
          type: string
          format: date-time
          example: null
          description: "The date the herd/flock/group mark was removed."
      required:
        - code
        - name

   
    CountryList:
      type: object
      properties:
        count:
          type: integer
          example: 1
        values:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    
    Error:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
      example:
        items:
          - code: 1
            message: "nnnnn"
          - code: 2
            message: "nnnnn"


    Address:
      type: object
      properties:
        id: 
          type: string
          format: uuid
          readOnly: true
        uprn:
          type: integer
          nullable: true
          example: 671544009
        addressLine1: 
          type: string
          nullable: false
          description: "This single address line is associated with the OS Address Base Fields such as SAO_TEXT, SAO_START_NUMBER, PAO_TEXT, PAO_START_NUMBER and STREET_DESCRIPTION."
          example: "Hansel & Gretel Farm, Pigs Street"
        addressLine2:
            type:  string
            example: "Cloverfield"
            nullable: true
            description : "This optional field is associated with the OS Address Base Field of LOCALITY, if applicable."
        postTown:
            type: string
            example: "Clover town"
            nullable: true
            description : "This field is to describes the Town or City of the Address. It is aligned to the OS Address Base Field of POST_TOWN."
        county:
            type: string
            example: "Sussex"
            nullable: true
            description : "This optional field is associated with the OS Address Base Field of ADMINISTRATIVE_AREA."
        postCode:
          type: string
          example: "S36 2BS"
          nullable: false
        country:
          $ref: '#/components/schemas/Country'
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the Address record was updated"
      required:
        - addressLine1
        - postCode
        
    Location:
      type: object
      properties:
        id: 
          type: string
          format: uuid
          readOnly: true       
        osMapReference:
          type: string
          example: "SK25979936"
        easting:
          type: number
          format: float
          example: 425978.12
        northing:
          type: number
          format: float
          example: 399361.50
        address:
          $ref: '#/components/schemas/Address'
        communication:
            type: array
            readOnly: true
            items:
                $ref: '#/components/schemas/Communication'
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the Location record was updated"
           
    LocationList:
      type: object
      properties:
        count:
          type: integer
          example: 1
        values:
          type: array
          items:
            $ref: '#/components/schemas/Location'
            
            
#Communication
    Communication:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          example: john.doe@somecompany.co.uk        
        mobile:
          type: string
          example: "07123456789"
        landline:
          type: string
          example: "0114 1231234"
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the Party Communication record was updated"
          
#Roles To Party
    RolesToParty:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        role:
          type: string
          example: Keeper
          nullable : true
        startDate:
          type: string
          format: date
          nullable: false
          description: "The date the said role was assigned to the said Party"
        endDate:
          type: string
          format: date
          nullable: true
          description: "The date the said role was revoked/removed from the said Party"
        speciesManagedByRole:
          type: array
          readOnly: true
          description: "This is the list of species managed by the said Role assigned to the said Party. Normally Roles such as Keeper will have species asscociated with them."
          items:
                $ref: '#/components/schemas/Species'
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the Roles To Party record was updated"
         
# Party
    Party:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          example: "Mr"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        name:
          type: string
          example: "John Doe"        
        partyType:
            type: string
            example : Person
            enum:
            - Person
            - Organisation
        communication:
            type: array
            readOnly: true
            items:
                $ref: '#/components/schemas/Communication'
        correspondanceAddress:
          $ref: '#/components/schemas/Address'
        partyRoles:
            type: array
            readOnly: true
            items:
                $ref: '#/components/schemas/RolesToParty'        
        state:
          type: string
          enum:
          - active
          - inactive
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the Party record was updated"
 
    SiteIdentifier:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          example: "57/103/2335"
          nullable: false
        type:
          type: string
          format: string
          example: "holdingNumber"
          nullable: false
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the SiteIdentifier record was updated"
      required:
        - identifier
        - type    

    AssociatedSite:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          readOnly: true
        site:
          allOf:
          - $ref: '#/components/schemas/Site'
        associationType:
          type: string
          enum:
            - temporaryHolding
            - mainSite
          example: "temporaryHolding"
          nullable: false
        startDate: 
          type: string
          format: date
          nullable: false
        endDate: 
          type: string
          format: date
          nullable: true

      required:
        - id
        - type
        - startDate
    
    Site:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          type: string
          example: "agriculturalHolding"
        name:
          type: string
          example: Hansel & Gretel Farm
        identifiers:
              type: array
              items:
                $ref: '#/components/schemas/SiteIdentifier'
        state:
          type: string
          enum:
          - active
          - inactive
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the Site record was updated"
      required:
        - name
        - siteType
        - source
        - destroyIdentityDocumentsFlag
    
    SiteDetail:
      allOf:
        - $ref: '#/components/schemas/Site'
        - type: object
          properties:
            
            startDate:
              type: string
              format: date
              nullable: false
            endDate:
              type: string
              format: date
              nullable: true
              example: null
            source:
              type: string
              example: SAM
            destroyIdentityDocumentsFlag:
              type: boolean
            #associatedSites:
            #  type: array
            #  readOnly: true
            #  items:
            #    $ref: '#/components/schemas/AssociatedSite'        
            location:
              $ref: '#/components/schemas/Location'
              required: false
            parties:
              type: array
              items:
                $ref: '#/components/schemas/Party'
            species:
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/Species'
            marks:
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/Marks'
            activities:
              type: array
              items:
                type: string
              readOnly: true
              example:
                - dairy
                - meat
                - tanning
            lastUpdatedDate:
                type: string
                format: date-time
                description: "The timestamp of the last time the SiteDetail record was updated"
          required:
            - siteType
            - name
            - parties
            - startDate

    SiteList:
      type: object
      properties:
        count:
          type: integer
          example: 1
          description: Total number of sites returned (or available)        
        values:
          type: array
          description: The list of site details
          items:
            allOf:
              - $ref: '#/components/schemas/SiteDetail'
              - type: object
             #   properties:
             #     startDate:
             #       type: string
             #       format: date
             #       nullable: false
             #     endDate:
             #       type: string
             #       format: date
             #       nullable: true
             #       example: null
             #     associatedSites:
             #       type: array
             #       readOnly: true
             #       items:
             #         $ref: '#/components/schemas/AssociatedSite'
             #     location:
             #       $ref: '#/components/schemas/Location'
             #     parties:
             #       type: array
             #       items:
             #         $ref: '#/components/schemas/Party'
                  
            #    required:
            #     - siteType
            #      - name
            #      - destroyIdentityDocumentsFlag
            #      - location
      required:
        - count
        - values

    SiteActivity:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          readOnly: true
        activity:
          type: string
          nullable: false
          example: slaughterMarket
        description:
          type: string
          readOnly: true
          example: Slaughter market
        startDate:
          type: string
          format: date
          nullable: false
        endDate:
          type: string
          format: date
          nullable: true
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the SiteActivity record was updated"
      required:
      - activity
      - startDate
    
    SiteActivityList:
      type: object
      properties:
        count:
          type: integer
          example: 1
          description: Total number of site activities returned (or available)
        values:
          type: array
          description: The list of site activity details
          items:
             $ref: '#/components/schemas/SiteActivity'
      
    SitePartyList:
      type: object
      properties:
        count:
          type: integer
          example: 1
          description: Total number of site parties returned (or available)
        values:
          type: array
          description: The list of site party details
          items:
             $ref: '#/components/schemas/Party'
             
    SpeciesList:
      type: object
      properties:
        count:
          type: integer
          example: 1
          description: Total number of site species returned (or available)
        values:
          type: array
          description: The list of site species details
          items:
             $ref: '#/components/schemas/Species'
             
    SiteMarksList:
      type: object
      properties:
        count:
          type: integer
          example: 1
          description: Total number of marks returned for the sites(or available)
        values:
          type: array
          description: The list of site species details
          items:
             $ref: '#/components/schemas/Marks'
    
  
    SiteType:
      type: object
      required:
        - type
        - description
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          maxLength: 50
          description: "The coded values for a siteType"
          example: "AH"
        description:
          type: string
          maxLength: 100
          description: The type of site an animal may reside at.
          example: "Agricultural Holding"
        lastUpdatedDate:
          type: string
          format: date-time
          description: "The timestamp of the last time the SiteType record was updated"
          
    SiteTypeResponse:
      allOf:
        - $ref: '#/components/schemas/SiteType'
        - type: object
          properties:
            relations:
              type: array
              items:
                $ref: '#/components/schemas/SiteTypeRelation'
              readOnly: true   
    
    SiteTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 1
        values:
          type: array
          items:
            $ref: '#/components/schemas/SiteType'

    SiteTypeRelation:
      type: object
      required:
        - relation
        - siteType
      properties:
        relation:
          type: string
          description: The coded value for a site relationship.
          example: "canCreateSite"
        siteType:
          type: string
          description: The type of site for the relationship
          example: performanceLocation   
    

#Start of the API opearations area
paths:
  /api/health:
    get:
      security:
        - {}
      tags:
       - housekeeping
      summary: Execute a health check
      description: Execute a health check on the API and its dependencies
      operationId: getHealth
      responses:
        '200':
          description: OK - Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthMonitorResponse'
  
  /api/countries:
    get:
      tags:
        - site reference
      summary: Retrieve a list of ISO Countries
      description: Endpoint created to retrieve a list of ISO Countries. Parameters can be set to filter by licensed species on premises.
      operationId: getCountries
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
          example: "England"
      - name: code
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
          example: ["GB", "FR"]
      - name: euTradeMember
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: devolvedAuthority
        in: query
        required: false
        schema:
          type: boolean
          example: true      
      - name: page
        in: query
        required: false
        schema:
          type: integer
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
      - name: order
        in: query
        required: false
        schema: 
          type: string
          enum:
            - code
            - name
      - name: sort
        in: query
        required: false
        schema:
          type: string
          enum:
            - asc
            - desc
      - name: lastUpdatedDate
        in:   query
        required: false
        schema:
            type: string
            format: date-time
            description: Returns only Countries that have been updated since this timestamp. This is the key parameter for Change Data Capture (CDC)
        # allowEmptyValue is deprecated in 3.0, no need to include it

      responses:
        '200':
          description: OK - Successful operation
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/CountryList'
        '400':
          description: Invalid request
 
  /api/countries/{id}:
    get:
      tags:
        - site reference
      summary: Retrieve a country detailed information.
      description: The endpoint returns an object containing the requested country detailed information.
      operationId: getCountry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK - Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
        '404':
          description: Country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/sites:
    get:
      tags:
        - site
      summary: Retrieve a list of available sites
      description: Endpoint created to retrieve a list of sites. Parameters can be set to filter by various elements such as Site Identifiers, Site Type etc.
      operationId: getSites
      parameters:
        - name: siteIdentifier
          in:   query
          required: false
          schema:
            type: string
            example: 57/103/2335
            description: This parameter accepts site identifiers such as CPH Number, FSA No, Port No etc which are associated with different site type such as CPH No for Agricultural Holdings.
        - name: type
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum: 
                - AI Sub Centre
                - Agricultural Holding
                - Article 18 Premises
                - Calf Collection Centre
                - Cold Store
                - Collection Centre
                - Embryo Transfer Unit
                - Export Assembly Centre
                - Head Boning Plant
                - Hunt Kennel
                - Imported Protein Premise
                - Incinerator
                - Knackers Yard
                - Landless Keeper
                - Market
                - Meat Products Plant
                - Protein Processing Plant
                - Semen Shop
                - Showground
                - Slaughterhouse (Red Meat)
                - Slaughterhouse (White Meat)
                - Slaughterhouse, both MP and Cold Store
                - Temporary Holding
                - Waste Food Premises
        - name: siteId
          in: query
          schema:
            type: string
        - name: keeperPartyId
          in: query
          required: false
          schema:
            type: string
            format: uuid
        #- name: text
        #  in: query
        #  required: false
        #  schema:
        #    type: string
        #  description: This parameter is used to search across multiple data fields of the said data object. 
        #  This needs to be discussed between LI Ltd. & DDTS to ascertain the feasibility of this parameter.
        #  example: Some Farm Place
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
        - name: order
          in: query
          required: false
          schema: 
            type: string
            enum:
              - type
              - name
              - identifier 
              - state
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: lastUpdatedDate
          in:   query
          required: false
          schema:
            type: string
            format: date-time
            description: Returns only Sites that have been updated since this timestamp. This is the key parameter for Change Data Capture (CDC)
      responses:
        '200':
          description: OK - Successful operation
          content:
            application/json:
              schema:  
                $ref: '#/components/schemas/SiteList'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
               allOf:
                 - $ref: './error.yaml#/components/schemas/Errors'
                 - type: object
                   properties:
                      status:
                        type: integer
                        enum: [BadRequest]
              examples:
                invalidRequestSchema: 
                  $ref: './error.yaml#/components/examples/invalid-request-schema'
        '401':
          description: Unauthorised
          content:
            application/json:
              schema:
               allOf:
                 - $ref: './error.yaml#/components/schemas/Errors'
                 - type: object
                   properties:
                      status:
                        type: integer
                        enum: [Unauthorised]
              examples:
                unAuthorised: 
                  $ref: './error.yaml#/components/examples/unauthorised'            
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
               allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer                 
                        enum: [Forbidden]
              examples:
                notFound: 
                  $ref: './error.yaml#/components/examples/forbidden' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer    
                        enum: [NotFound]
              examples:
                  notFound: 
                    $ref: './error.yaml#/components/examples/not-found' 
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer    
                        enum: [ServerError]
              examples:
                    serverError:
                      $ref: './error.yaml#/components/examples/server-error' 
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer    
                        enum: [ServiceUnavailable]
              examples:
                    serverUnavailable:
                      $ref: './error.yaml#/components/examples/service-unavailable'

  

  /api/sites/count:
    get:
      tags:
          - site
      summary: Retrieve the total count of all available sites.
      description: The endpoint returns the total count of all available sites.
      operationId: getSiteCount
      parameters:
        - name: lastUpdatedDate
          in:   query
          required: false
          schema:
            type: string
            format: date-time
            description: Returns the total count of all available sites that have been updated since this timestamp. This is the key parameter for Change Data Capture (CDC)
      responses:
        '200':
          description: OK - Successful response with the site count
          content:
            application/json:
              schema:
                type: integer
                properties:
                    count:
                      type: integer
                      format: int64
                      example: 47000
                      description: The total number of sites.
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
               allOf:
                 - $ref: './error.yaml#/components/schemas/Errors'
                 - type: object
                   properties:
                      status:
                        type: integer
                        enum: [BadRequest]
              examples:
                invalidRequestSchema: 
                  $ref: './error.yaml#/components/examples/invalidRequestSchema'   
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
               allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer                 
                        enum: [Forbidden]
              examples:
                notFound: 
                  $ref: './error.yaml#/components/examples/forbidden' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer    
                        enum: [NotFound]
              examples:
                  notFound: 
                    $ref: './error.yaml#/components/examples/notFound' 
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer    
                        enum: [ServerError]
              examples:
                    serverError:
                      $ref: './error.yaml#/components/examples/serverError' 
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer    
                        enum: [ServiceUnavailable]
              examples:
                    serverUnavailable:
                      $ref: './error.yaml#/components/examples/serviceUnavailable'  
  
  /api/sites/{id}:
    get:
      tags:
          - site
      summary: Retrieve a site detailed information.
      description: The endpoint returns an object containing the requested site detailed information.
      operationId: getSiteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: assuranceHistoryFlag
          in: query
          required: false
          description: Set true to return the sites assurance history.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK - Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteDetail'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
               allOf:
                 - $ref: './error.yaml#/components/schemas/Errors'
                 - type: object
                   properties:
                      status:
                        type: integer
                        enum: [BadRequest]
              examples:
                invalid-request-schema: 
                  $ref: './error.yaml#/components/examples/invalidRequestSchema'   
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
               allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer                 
                        enum: [Forbidden]
              examples:
                not-found: 
                  $ref: './error.yaml#/components/examples/forbidden' 
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer    
                        enum: [NotFound]
              examples:
                  not-found: 
                    $ref: './error.yaml#/components/examples/notFound' 
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer    
                        enum: [ServerError]
              examples:
                    server-error:
                      $ref: './error.yaml#/components/examples/serverError' 
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                allOf:
                - $ref: './error.yaml#/components/schemas/Errors'
                - type: object
                  properties:
                      status:
                        type: integer    
                        enum: [ServiceUnavailable]
              examples:
                    server-error:
                      $ref: './error.yaml#/components/examples/serviceUnavailable'
    
          
  /api/sites/{id}/parties:
    get:
      tags:
        - site
      summary: 'Retrieve a list of site parties'
      description: 'This endpoint can be used to retrieve site parties'
      operationId: 'getSiteParties'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePartyList'

   
  /api/sites/{id}/parties/{pid}:
    get:
      tags:
        - site
      summary: 'Get a site party'
      description: 'Returns a site party'
      operationId: getSitePartyById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the site to retrieve'
        - name: pid
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the site party to retrieve'
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Party'
        '404':
          description: 'Not Found '

   
  /api/sites/{id}/associatedsites:
    get:
      tags:
        - site
      summary: 'Retrieve a list of a sites associated sites'
      description: 'This endpoint can be used to retrieve associated sites'
      operationId: 'getSiteAssociatedSites'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: lastUpdatedDate
          in:   query
          required: false
          schema:
            type: string
            format: date-time
            description: Returns only AssociatedSites that have been updated since this timestamp. This is the key parameter for Change Data Capture (CDC)
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatedSite'

    
  /api/sites/{id}/associatedsites/{aid}:
    get:
      tags:
        - site
      summary: 'Get a sites associated site'
      description: 'Returns a sites associated site'
      operationId: getSiteAssociatedSiteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the site to retrieve'
        - name: aid
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the associated site to retrieve'
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatedSite'
        '404':
          description: 'Not Found '
          
          
  /api/sites/{id}/species:
    get:
      tags:
        - site
      summary: 'Retrieve a list of site species'
      description: 'This endpoint can be used to retrieve site species'
      operationId: 'getSiteSpecies'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeciesList'
                
    
  /api/sites/{id}/species/{sid}:
    get:
      tags:
        - site
      summary: 'Get a list of site species'
      description: 'Returns a site species'
      operationId: getSiteSpeciesById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the site to retrieve'
        - name: sid
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the site species to retrieve'
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Species'
        '404':
          description: 'Not Found '

  /api/sites/{id}/marks:
    get:
      tags:
        - site
      summary: 'Retrieve a list of site marks'
      description: 'This endpoint can be used to retrieve site marks'
      operationId: 'getSiteMarks'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteMarksList'
                
    
  /api/sites/{id}/marks/{mid}:
    get:
      tags:
        - site
      summary: 'Get a list of site marks'
      description: 'Returns a site marks'
      operationId: getSiteMarksById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the site to retrieve'
        - name: mid
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the site marks to retrieve'
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Marks'
        '404':
          description: 'Not Found '

  /api/sites/{id}/activities:
    get:
      tags:
        - site
      summary: 'Retrieve a list of a sites activities'
      description: 'This endpoint can be used to retrieve a list of a sites activities'
      operationId: 'getSiteActivities'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: lastUpdatedDate
          in:   query
          required: false
          schema:
            type: string
            format: date-time
            description: Returns only Activities that have been updated since this timestamp. This is the key parameter for Change Data Capture (CDC)
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteActivityList'

    
  /api/sites/{id}/activities/{aid}:
    get:
      tags:
        - site
      summary: 'Get a sites activity by id'
      description: 'Returns a sites activity by its id.'
      operationId: getSiteActivityById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the site to retrieve'
        - name: aid
          in: path
          required: true
          schema:
            type: string
            format: uuid      
          description: 'The id of the activity to retrieve'
      responses:
        '200':
          description: 'OK - successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteActivity'
        '404':
          description: 'Not Found '


  /api/sitetypes:
    get:
      summary: Retrieve all site types
      description: Get a list of all available site types
      operationId: getSiteTypes
      parameters:
        - name: lastUpdatedDate
          in:   query
          required: false
          schema:
            type: string
            format: date-time
            description: Returns only SiteTypes that have been updated since this timestamp. This is the key parameter for Change Data Capture (CDC)
      tags:
        - site reference
      responses:
        '200':
          description: OK - Successful response
          content:
            application/json:
              schema:
                 items:
                  $ref: '#/components/schemas/SiteTypeList'
        '400':
          description: Invalid request 
        '500':
          description: Internal server error


  /api/sitetypes/{type}:
    get:
      tags:
          - site reference
      summary: Retrieve a site types detailed information.
      description: The endpoint returns an object containing the requested site type and any relations information.
      operationId: getSiteTypeById
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteTypeResponse'
        '400':
          description: Invalid request
          
        '403':
          description: Forbidden
          
        '404':
          description: Not Found
          
        '500':
          description: Internal Server Error
          
        '503':
          description: Service Unavailable
    
  /api/species:
    get:
      summary: Retrieve all species types
      description: Get a list of all available species types
      operationId: getSpeciesTypes
      parameters:
        - name: lastUpdatedDate
          in:   query
          required: false
          schema:
            type: string
            format: date-time
            description: Returns only SpeciesTypes that have been updated since this timestamp. This is the key parameter for Change Data Capture (CDC)
      tags:
        - site reference
      responses:
        '200':
          description: OK - Successful response
          content:
            application/json:
              schema:
                 items:
                  $ref: '#/components/schemas/SpeciesList'
        '400':
          description: Invalid request 
        '500':
          description: Internal server error


  /api/species/{code}:
    get:
      tags:
          - site reference
      summary: Retrieve a species types detailed information.
      description: The endpoint returns an object containing the requested species type and any relations information.
      operationId: getSpeciesTypeById
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Species'
        '400':
          description: Invalid request
          
        '403':
          description: Forbidden
          
        '404':
          description: Not Found
          
        '500':
          description: Internal Server Error
          
        '503':
          description: Service Unavailable
  
  /api/locations:
    get:
      tags:
        - location
      summary: Retrieve a list of locations
      description: This endpoint can be used to retrieve locations
      operationId: getLocations
      parameters:
        - name: postcode
          in: query
          required: false
          schema:
            type: string
            example: S36 2BS
        - name: lastUpdatedDate
          in:   query
          required: false
          schema:
            type: string
            format: date-time
            description: Returns only locations that have been updated since this timestamp. This is the key parameter for Change Data Capture (CDC)
      responses:
        '200':
          description: OK - successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationList'
   

  
  /api/locations/{id}:
    get:
      tags:
          - location
      summary: Retrieve a location detailed information.
      description: The endpoint returns an object containing the requested location detailed information.
      operationId: getLocationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK - Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '404':
          description: Not found
        '500':
          description: 'Internal Server Error'              